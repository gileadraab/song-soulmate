name: CI with Unit Tests and Notifications

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting with flake8
        run: |
          flake8 --exclude=venv

      - name: Format code with black
        run: |
          black . --exclude=venv --check --diff

      - name: Run unit tests with pytest
        run: |
          pytest -v --tb=short

      - name: Generate test coverage report
        run: |
          pip install coverage
          coverage run -m pytest
          coverage report -m

  notify-success:
    needs: test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Discord Success Notification
        continue-on-error: true
        run: |
          if [ -n "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
            curl -H "Content-Type: application/json" \
                 -d '{
                   "embeds": [{
                     "title": "üéâ BUILD SUCCESSFUL üéâ",
                     "color": 65280,
                     "fields": [
                       {"name": "Repository", "value": "${{ github.repository }}", "inline": true},
                       {"name": "Branch", "value": "${{ github.ref_name }}", "inline": true},
                       {"name": "Commit", "value": "[${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})", "inline": false},
                       {"name": "Author", "value": "${{ github.event.head_commit.author.name }}", "inline": true},
                       {"name": "Checks Passed", "value": "‚úÖ Linting\n‚úÖ Formatting\n‚úÖ Unit tests (24/24)", "inline": false}
                     ]
                   }]
                 }' \
                 "${{ secrets.DISCORD_WEBHOOK_URL }}"
          else
            echo "Discord webhook not configured, skipping notification"
          fi

      - name: Slack Success Notification
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#dev'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-failure:
    needs: test
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Discord Failure Notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            üí• **BUILD FAILED** üí•

            **Repository:** `${{ github.repository }}`
            **Branch:** `${{ github.ref_name }}`
            **Workflow:** `${{ github.workflow }}`
            **Event:** `${{ github.event_name }}`
            **Run ID:** `${{ github.run_id }}`

            **Commit Details:**
            ‚Ä¢ **SHA:** [`${{ github.sha }}`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            ‚Ä¢ **Author:** ${{ github.event.head_commit.author.name }} <${{ github.event.head_commit.author.email }}>
            ‚Ä¢ **Message:** "${{ github.event.head_commit.message }}"
            ‚Ä¢ **Timestamp:** ${{ github.event.head_commit.timestamp }}

            **Possible Issues:**
            ‚ùå Code linting errors (flake8)
            ‚ùå Code formatting issues (black)
            ‚ùå Unit test failures (pytest)
            ‚ùå Build/dependency problems

            **Actions Required:**
            üîß [Check Workflow Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            üìù Review and fix the issues above
            üîÑ Push fixes to trigger re-run

      - name: Slack Failure Notification
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#dev'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy-notification:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Discord Deployment Notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            üöÄ **READY FOR DEPLOYMENT** üöÄ

            **Repository:** `${{ github.repository }}`
            **Branch:** `main` (Production Branch)
            **Workflow:** `${{ github.workflow }}`
            **Event:** Main branch updated
            **Run ID:** `${{ github.run_id }}`

            **Latest Commit:**
            ‚Ä¢ **SHA:** [`${{ github.sha }}`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            ‚Ä¢ **Author:** ${{ github.event.head_commit.author.name }} <${{ github.event.head_commit.author.email }}>
            ‚Ä¢ **Message:** "${{ github.event.head_commit.message }}"
            ‚Ä¢ **Timestamp:** ${{ github.event.head_commit.timestamp }}

            **Pre-Deployment Checks:**
            ‚úÖ All tests passed (24/24)
            ‚úÖ Code quality validated
            ‚úÖ Build successful
            ‚úÖ Ready for production

            **Next Steps:**
            üåü [Deploy to Production]
            üìä [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            üìã [Check Deployment Status]

      - name: Slack Deployment Notification
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          text: |
            üöÄ Main branch updated! Ready for deployment.
            Commit: ${{ github.sha }}
            Author: ${{ github.event.head_commit.author.name }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}