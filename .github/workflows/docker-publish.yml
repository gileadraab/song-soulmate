name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
      - dockerize-application
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: song-soulmate

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        if: github.event_name != 'pull_request'
        run: |
          docker run --rm -d -p 5000:5000 --name test-container ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          sleep 10
          curl -f http://localhost:5000/health || exit 1
          docker stop test-container

      - name: Test local Docker image (PR only)
        if: github.event_name == 'pull_request'
        run: |
          docker run --rm -d -p 5000:5000 --name test-container song-soulmate:latest
          sleep 10
          curl -f http://localhost:5000/health || exit 1
          docker stop test-container